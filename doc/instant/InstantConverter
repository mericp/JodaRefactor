InstantConverter defines how an object is converted to milliseconds/misc.chronology.
 * <p>
 * The two methods in this interface must be called in order, as the
 * <code>getInstantMillis</code> method relies on the result of the
 * <code>getChronology</code> method being passed in.

 Chronology getChronology(Object object, DateTimeZone zone):
 Extracts the misc.chronology from an object of this converter's type
      * where the time zone is specified.
      *
      * @param object  the object to convert
      * @param zone  the specified zone to use, null means default zone
      * @return the misc.chronology, never null
      * @throws ClassCastException if the object is invalid

Chronology getChronology(Object object, Chronology chrono):
Extracts the misc.chronology from an object of this converter's type
     * where the misc.chronology may be specified.
     * <p>
     * If the misc.chronology is non-null it should be used. If it is null, then the
     * object should be queried, and if it has no misc.chronology then ISO default is used.
     *
     * @param object  the object to convert
     * @param chrono  the misc.chronology to use, null means use object
     * @return the misc.chronology, never null
     * @throws ClassCastException if the object is invalid

long getInstantMillis(Object object, Chronology chrono):
Extracts the millis from an object of this converter's type.
     * <p>
     * The misc.chronology passed in is the result of the call to <code>getChronology</code>.
     *
     * @param object  the object to convert
     * @param chrono  the misc.chronology to use, which is the non-null result of getChronology()
     * @return the millisecond misc.instant
     * @throws ClassCastException if the object is invalid
     * @throws IllegalArgumentException if object conversion fails