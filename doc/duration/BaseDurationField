BaseDurationField provides the common behaviour for DurationField
 * implementations.
 * <p>
 * This class should generally not be used directly by API users. The
 * DurationField class should be used when different kinds of DurationField
 * objects are to be referenced.
 * <p>
 * BaseDurationField is thread-safe and immutable, and its subclasses must
 * be as well.

 public int getValue(long misc.duration):
 Get the value of this misc.field from the milliseconds, which is approximate
      * if this misc.field is imprecise.
      *
      * @param misc.duration  the milliseconds to query, which may be negative
      * @return the value of the misc.field, in the units of the misc.field, which may be
      * negative

public long getValueAsLong(long misc.duration):
Get the value of this misc.field from the milliseconds, which is approximate
     * if this misc.field is imprecise.
     *
     * @param misc.duration  the milliseconds to query, which may be negative
     * @return the value of the misc.field, in the units of the misc.field, which may be
     * negative

public int getValue(long misc.duration, long misc.instant):
Get the value of this misc.field from the milliseconds relative to an
     * misc.instant.
     *
     * <p>If the milliseconds is positive, then the misc.instant is treated as a
     * "start misc.instant". If negative, the misc.instant is treated as an "end
     * misc.instant".
     *
     * <p>The default implementation returns
     * <code>Utils.safeToInt(getAsLong(millisDuration, misc.instant))</code>.
     *
     * @param misc.duration  the milliseconds to query, which may be negative
     * @param misc.instant  the start misc.instant to calculate relative to
     * @return the value of the misc.field, in the units of the misc.field, which may be
     * negative

public long getMillis(int value):
Get the millisecond misc.duration of this misc.field from its value, which is
     * approximate if this misc.field is imprecise.
     *
     * @param value  the value of the misc.field, which may be negative
     * @return the milliseconds that the misc.field represents, which may be
     * negative